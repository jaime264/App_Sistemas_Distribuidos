//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViewHotel.ServiceReservation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationBE", Namespace="http://schemas.datacontract.org/2004/07/ServiceHotel")]
    [System.SerializableAttribute()]
    public partial class ReservationBE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime admissionDateField;
        
        private int customerIdField;
        
        private string customerNameField;
        
        private System.DateTime departureDateField;
        
        private int hotelIdField;
        
        private string hotelNameField;
        
        private int idField;
        
        private int roomIdField;
        
        private string roomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime admissionDate {
            get {
                return this.admissionDateField;
            }
            set {
                if ((this.admissionDateField.Equals(value) != true)) {
                    this.admissionDateField = value;
                    this.RaisePropertyChanged("admissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((this.customerIdField.Equals(value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.customerNameField, value) != true)) {
                    this.customerNameField = value;
                    this.RaisePropertyChanged("customerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime departureDate {
            get {
                return this.departureDateField;
            }
            set {
                if ((this.departureDateField.Equals(value) != true)) {
                    this.departureDateField = value;
                    this.RaisePropertyChanged("departureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int hotelId {
            get {
                return this.hotelIdField;
            }
            set {
                if ((this.hotelIdField.Equals(value) != true)) {
                    this.hotelIdField = value;
                    this.RaisePropertyChanged("hotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string hotelName {
            get {
                return this.hotelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.hotelNameField, value) != true)) {
                    this.hotelNameField = value;
                    this.RaisePropertyChanged("hotelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int roomId {
            get {
                return this.roomIdField;
            }
            set {
                if ((this.roomIdField.Equals(value) != true)) {
                    this.roomIdField = value;
                    this.RaisePropertyChanged("roomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string roomName {
            get {
                return this.roomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.roomNameField, value) != true)) {
                    this.roomNameField = value;
                    this.RaisePropertyChanged("roomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Confirm", Namespace="http://schemas.datacontract.org/2004/07/ServiceHotel.util")]
    [System.SerializableAttribute()]
    public partial class Confirm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Clase {
            get {
                return this.ClaseField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaseField, value) != true)) {
                    this.ClaseField = value;
                    this.RaisePropertyChanged("Clase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReservation.IServiceReservation")]
    public interface IServiceReservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/UpdateReservation", ReplyAction="http://tempuri.org/IServiceReservation/UpdateReservationResponse")]
        ViewHotel.ServiceReservation.Confirm UpdateReservation(ViewHotel.ServiceReservation.ReservationBE reservationBE, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/UpdateReservation", ReplyAction="http://tempuri.org/IServiceReservation/UpdateReservationResponse")]
        System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> UpdateReservationAsync(ViewHotel.ServiceReservation.ReservationBE reservationBE, int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/ListReservation", ReplyAction="http://tempuri.org/IServiceReservation/ListReservationResponse")]
        ViewHotel.ServiceReservation.ReservationBE[] ListReservation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/ListReservation", ReplyAction="http://tempuri.org/IServiceReservation/ListReservationResponse")]
        System.Threading.Tasks.Task<ViewHotel.ServiceReservation.ReservationBE[]> ListReservationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/CreateReservation", ReplyAction="http://tempuri.org/IServiceReservation/CreateReservationResponse")]
        ViewHotel.ServiceReservation.Confirm CreateReservation(ViewHotel.ServiceReservation.ReservationBE reservationBE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/CreateReservation", ReplyAction="http://tempuri.org/IServiceReservation/CreateReservationResponse")]
        System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> CreateReservationAsync(ViewHotel.ServiceReservation.ReservationBE reservationBE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/DeleteReservation", ReplyAction="http://tempuri.org/IServiceReservation/DeleteReservationResponse")]
        ViewHotel.ServiceReservation.Confirm DeleteReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReservation/DeleteReservation", ReplyAction="http://tempuri.org/IServiceReservation/DeleteReservationResponse")]
        System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> DeleteReservationAsync(int reservationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceReservationChannel : ViewHotel.ServiceReservation.IServiceReservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceReservationClient : System.ServiceModel.ClientBase<ViewHotel.ServiceReservation.IServiceReservation>, ViewHotel.ServiceReservation.IServiceReservation {
        
        public ServiceReservationClient() {
        }
        
        public ServiceReservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ViewHotel.ServiceReservation.Confirm UpdateReservation(ViewHotel.ServiceReservation.ReservationBE reservationBE, int reservationId) {
            return base.Channel.UpdateReservation(reservationBE, reservationId);
        }
        
        public System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> UpdateReservationAsync(ViewHotel.ServiceReservation.ReservationBE reservationBE, int reservationId) {
            return base.Channel.UpdateReservationAsync(reservationBE, reservationId);
        }
        
        public ViewHotel.ServiceReservation.ReservationBE[] ListReservation() {
            return base.Channel.ListReservation();
        }
        
        public System.Threading.Tasks.Task<ViewHotel.ServiceReservation.ReservationBE[]> ListReservationAsync() {
            return base.Channel.ListReservationAsync();
        }
        
        public ViewHotel.ServiceReservation.Confirm CreateReservation(ViewHotel.ServiceReservation.ReservationBE reservationBE) {
            return base.Channel.CreateReservation(reservationBE);
        }
        
        public System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> CreateReservationAsync(ViewHotel.ServiceReservation.ReservationBE reservationBE) {
            return base.Channel.CreateReservationAsync(reservationBE);
        }
        
        public ViewHotel.ServiceReservation.Confirm DeleteReservation(int reservationId) {
            return base.Channel.DeleteReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<ViewHotel.ServiceReservation.Confirm> DeleteReservationAsync(int reservationId) {
            return base.Channel.DeleteReservationAsync(reservationId);
        }
    }
}
