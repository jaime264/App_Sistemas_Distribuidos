saltar al contenido
Search or jump to…

Problemas de solicitudes de
extracción
Mercado
Explorar
 
@ jaime264 
¡Aprende Git y GitHub sin ningún código!
Con la guía Hello World, comenzará una rama, escribirá comentarios y abrirá una solicitud de extracción.


2.9k
91,2k46.4kgithub / gitignore
Solicitudes de extracción decódigo119AccionesProyectos0Información deseguridad 
gitignore /VisualStudio.gitignore
@paulsmithkc paulsmithkc [VisualStudio] agregar carpeta de registros ( # 3143 )
26c3d84
on 20 Sep
@tecla Shift@arcresu@aroben@bbodenmiller@HassanHashemi@haacked@niik@Arnott@Zenuka@sayedihashimi@saschanaz@LunicLynx@OsirisTerje@sfhardman@jamiehumphries@richorama@RehanSaeed@marcrocny@matma@JFMG@jamesqo@elerch@cbadke@CoskunSunali@bdukes@una enfermera
354 líneas (284 sloc)  5.91 KB
  
# # Ignorar archivos temporales de Visual Studio, resultados de compilación y
# # archivos generados por complementos populares de Visual Studio.
# #
# # Obtenga lo último de https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# Archivos específicos del usuario
* .rsuser
* .suo
* .user
* .userosscache
* .sln.docstates

# Archivos específicos del usuario (MonoDevelop / Xamarin Studio)
* .userprefs

# Mono archivos generados automáticamente
mono_crash. * *

# Resultados de construcción
[ Dd ] ebug /
[ Dd ] ebugPublic /
[ Rr ] elease /
[ Rr ] elimina /
x64 /
x86 /
[ Aa ] [ Rr ] [ Mm ] /
[ Aa ] [ Rr ] [ Mm ] 64 /
bld /
[ Bb ] en /
[ Oo ] bj /
[ Ll ] og /
[ Ll ] ogs /

# Visual Studio 2015/2017 directorio de caché / opciones
.vs/
# Descomente si tiene tareas que crean los archivos estáticos del proyecto en wwwroot
# wwwroot /

# Visual Studio 2017 archivos generados automáticamente
Generado \ Archivos /

# Resultados de la prueba MSTest
[ Tt ] est [ Rr ] esult * /
[ Bb ] uild [ Ll ] og. * *

# NUnit
* .VisualState.xml
TestResult.xml
nunit- * .xml

# Construir resultados de un proyecto ATL
[ Dd ] ebugPS /
[ Rr ] eleasePS /
dlldata.c

# Resultados de referencia
BenchmarkDotNet.Artifacts /

# .NET Core
project.lock.json
project.fragment.lock.json
artefactos /

# StyleCop
StyleCopReport.xml

# Archivos creados por Visual Studio
* _i.c
* _p.c
* _h.h
* .ilk
* .meta
* .obj
* .iobj
* .pch
* .pdb
* .ipdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
* _wpftmp.csproj
* .log
* .vspscc
* .vssscc
construcciones
* .pidb
* .svclog
* .scc

# Chutzpah Test files
_Chutzpah *

# Visual C ++ archivos de caché
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile
* .VC.db
* .VC.VC.opendb

# Visual Studio profiler
* .psess
* .vsp
* .vspx
* .sap

# Visual Studio Trace Files
* .e2e

# TFS 2012 Espacio de trabajo local
$ tf /

# Kit de herramientas de automatización de orientación
* .gpState

# ReSharper es un complemento de codificación .NET
_ReSharper * /
* . [ Rr ] e [ Ss ] harper
* .DotSettings.user

# JustCode es un complemento de codificación .NET
.JustCode

# TeamCity es un complemento de compilación
_TeamCity *

# DotCover es una herramienta de cobertura de código
* .dotCover

# AxoCover es una herramienta de cobertura de código
.axoCover / *
! .axoCover / settings.json

# Resultados de la cobertura del código de Visual Studio
* .cobertura
* .coveragexml

# NCrunch
_NCrunch_ *
. * crunch * .local.xml
nCrunchTemp_ *

# MightyMoose
* .mm. * *
AutoTest.Net /

# Banco de trabajo web (sass)
.sass-cache /

# Carpeta de salida de Installshield
[ Ee ] xpress /

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/
© 2019 GitHub, Inc.
Terms
Privacy
Seguridad
Estado
Ayuda
Póngase en contacto con GitHub
Precios
API
Formación
Blog
Acerca de
